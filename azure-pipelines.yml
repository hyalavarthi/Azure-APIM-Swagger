# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  terraformVersion : '1.1.5'
  system.debug: 'true'
stages:
- stage: Build
  displayName: Build
  jobs:
  - job: BuildCode
    pool:
      vmImage: 'windows-latest'
    steps:

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: restore      
        projects: '**/*.csproj'
        
    - task: DotNetCoreCLI@2
      displayName: 'Build Solution'
      inputs:
        projects: $(solution)
        arguments: ' --no-restore --configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: 'Run Publish'
      inputs:
        projects: '**/*.csproj'
        command: publish
        publishWebProjects: false
        zipAfterPublish: true
        arguments: ' --no-build --configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    
    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))  

  - job: BuildInfrastructure
    dependsOn:
      - BuildCode
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifacts'
      inputs:
        PathtoPublish: Infrastructure
        ArtifactName: Infrastructure  

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'
    
    - task: TerraformCLI@0
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)\Infrastructure'
        commandOptions: '-backend=false'
        allowTelemetryCollection: false
        
    - task: TerraformCLI@0
      inputs:
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)\Infrastructure'
        allowTelemetryCollection: false
    
- stage: Deploy
  displayName: Deploy
  jobs:
  - job: Deploy
    pool:
      vmImage: 'windows-latest'
     
    steps:
    - checkout: none
    - download: current
      displayName: Download infrastructure
      artifact: Infrastructure
    - download: current
      displayName: Download DeploymentPackage
      artifact: drop  
  
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: Install terraform version
      inputs:
        terraformVersion: $(terraformVersion)
  

    
    - task: TerraformCLI@0
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)\Infrastructure'
        backendType: 'azurerm'
        backendServiceArm: 'webapitesting'
        backendAzureRmSubscriptionId: '672a6f62-7924-4df6-83d4-51ca2bb0d99c'
        backendAzureRmResourceGroupName: 'RG-Practise-Cloud'
        backendAzureRmStorageAccountName: 'terraformstorageconnect'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'terraform.tfstate'
        allowTelemetryCollection: false
    
    - task: TerraformCLI@0
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)\Infrastructure'
        environmentServiceName: 'webapitesting'
        providerAzureRmSubscriptionId: '672a6f62-7924-4df6-83d4-51ca2bb0d99c'
        commandOptions: '-out=changes.tfplan -var-file=$(DownloadSecureFile.secureFilePath)-var "deployment_package_path=$(Pipeline.Workspace)/drop/api.zip" -var publisher_email=$(publisher_email)'
        allowTelemetryCollection: true
        publishPlanResults: 'infrastructure'
    
    - task: TerraformCLI@0
      inputs:
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)\Infrastructure'
        environmentServiceName: 'webapitesting'
        providerAzureRmSubscriptionId: '672a6f62-7924-4df6-83d4-51ca2bb0d99c'
        commandOptions: 'changes.tfplan'
        allowTelemetryCollection: true
    
    
    


        